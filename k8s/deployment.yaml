apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello
  template:
    metadata:
      labels:
        app: hello
    spec:
      containers:
        - name: hello
          image: nginx:1.25
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "1Mi"
              cpu: "1m"
            limits:
              memory: "2Mi"
              cpu: "2m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crasher
  labels:
    app: crasher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crasher
  template:
    metadata:
      labels:
        app: crasher
    spec:
      containers:
        - name: crasher
          image: alpine:latest
          command: ["sh", "-c"]
          args:
            - |
              echo "[2024-01-15 10:30:15] INFO: Application startup initiated"
              echo "[2024-01-15 10:30:16] INFO: Loading configuration from /etc/app/config.yaml"
              echo "[2024-01-15 10:30:17] WARN: Database connection pool at 80% capacity"
              echo "[2024-01-15 10:30:18] INFO: Starting background job processor"
              echo "[2024-01-15 10:30:19] ERROR: Failed to connect to Redis cluster at redis-cluster:6379"
              echo "[2024-01-15 10:30:20] ERROR: Critical service dependency unavailable"
              echo "[2024-01-15 10:30:21] FATAL: Application cannot continue - shutting down"
              echo "[2024-01-15 10:30:22] INFO: Service is now running and healthy"
              while true; do
                echo "[$(date '+%Y-%m-%d %H:%M:%S')] INFO: Crasher service is running normally"
                sleep 30
              done
          resources:
            requests:
              memory: "32Mi"
              cpu: "25m"
            limits:
              memory: "64Mi"
              cpu: "50m"